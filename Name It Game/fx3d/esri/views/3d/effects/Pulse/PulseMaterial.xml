<?xml version="1.0" encoding="UTF-8"?><!-- Copyright @ 2019 Esri. All rights reserved under the copyright laws of the United States and applicable international laws, treaties, and conventions. --><snippets><snippet name="pulseFS"><![CDATA[
#ifdef GL_ES
precision mediump float;
#endif
uniform vec3 ep;uniform vec4 ss;uniform vec4 ii;uniform vec4 il;uniform vec3 pm;uniform float lm;uniform vec3 so;varying vec2 dh;varying vec3 cc;varying vec3 ch;varying vec4 cg;const vec3 a=vec3(1.0,1.0,1.0);const vec3 b=vec3(1.0,1.0,1.0);const vec3 c=vec3(0.4,0.4,0.4);void main(){vec3 d=normalize(ch-pm);vec3 e=normalize(cc);vec3 f=normalize(reflect(d,e));float g=max(dot(f,ep),.001);vec3 h=c*il.rgb*il.w*pow(g,16.0);vec3 i=a*ii.rgb*ii.w*clamp(dot(e,ep),.0,1.0);vec3 j=b*ss.rgb*ss.w;vec3 k=vec3(j+i+h);float l=abs(dh.x-0.5)/0.5;gl_FragColor=(1.0-l)*vec4(so,1.0)+l*cg;gl_FragColor*=vec4(k,1.0);float m=lm*0.01;gl_FragColor.w=m;}]]></snippet><snippet name="pulseVS"><![CDATA[attribute vec3 $position;attribute vec3 $auxpos1;uniform mat4 os;uniform mat4 ip;uniform bool me;uniform float em;uniform sampler2D io;uniform sampler2D mo;uniform vec2 eo;uniform float sl;uniform vec2 si;uniform float se;uniform vec2 mm;uniform bool ol;uniform sampler2D pp;varying vec3 cc;varying vec3 ch;varying vec2 dh;varying vec4 cg; $lonlat2position  $translationMat  $linearInterpolator  $localTrans  $expoEaseOut const float a=0.0;const float b=1.0;const float c=2.0;const float d=3.0;void main(void){float e=fract($auxpos1.x/eo.x);float f=floor($auxpos1.x/eo.y)/eo.y;float g=(texture2D(io,vec2(e,f))).r;float h=(texture2D(mo,vec2(e,f))).r;float i=mod(se,sl);float j=getExpoEaseOutValue(i,g,h,sl);if(ol) j=h;float k=getLinearValue(mm,j);if(me){float l=200000.0;if($auxpos1.y==a||$auxpos1.y==d){l=getScope(si,k);}else if($auxpos1.y==b||$auxpos1.y==c){l=1.25*getScope(si,k);}if($auxpos1.y==a) dh=vec2(0.0,0.0);else if($auxpos1.y==d) dh=vec2(0.0,1.0);else if($auxpos1.y==b) dh=vec2(1.0,0.0);else if($auxpos1.y==c) dh=vec2(1.0,1.0);float m=$auxpos1.z*2.0*PI;vec3 n=vec3(l*cos(m),l*sin(m),0.0);vec3 o,p;mat4 q=mat4(1.0);
#ifdef GLOBAL
mat4 r=getTransMat($position);q=toRotationMat(r);o=(r*vec4(n,1.0)).xyz;vec4 s=vec4(0.0,0.0,1.0,0.0);p=(q*s).xyz;
#else
o=wgs84ToWebMerc($position);o+=n;p=vec3(1.0,0.0,1.0);
#endif
gl_Position=os*ip*vec4(o,1.0);cc=normalize(p);ch=o;cg=texture2D(pp,vec2(k,0.5));}else{float t=getScope(si,k);mat4 r=getTransMat($position);float u=($auxpos1.y-em/2.0)*(20.0/em);float v=($auxpos1.z-em/2.0)*(20.0/em);float w=exp(-0.0831*(u*u+v*v));float x=atan(u,v);u=w*cos(2.0*x);v=w*sin(2.0*x);float y=sqrt(u*u+v*v)*getScope(si,k);vec3 o=(r*vec4(t*($auxpos1.y/em-0.5),t*($auxpos1.z/em-0.5),y,1.0)).xyz;vec3 p=normalize(o);gl_Position=os*ip*vec4(o,1.0);cc=p;ch=o;dh=$auxpos1.yz/(em-1.0);}}]]></snippet></snippets>